// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Loading and processing json schemas Test api-with-examples.json 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/": Object {
            "required": Array [
              "get",
            ],
          },
          "/v2": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/",
          "/v2",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 300,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/v2": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 203,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test api-with-examples.json 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/": Object {
            "required": Array [
              "get",
            ],
          },
          "/v2": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/",
          "/v2",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 300,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/v2": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 203,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test balance-service.json 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/api/v2/accounts/{accountId}/adjust-balance": Object {
            "required": Array [
              "post",
            ],
          },
          "/api/v2/accounts/{accountId}/balance": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v2/accounts/{accountId}/transactions": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v3/accounts/{accountId}/adjust-balance": Object {
            "required": Array [
              "post",
            ],
          },
          "/api/v3/accounts/{accountId}/balance": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v3/accounts/{accountId}/transactions": Object {
            "required": Array [
              "get",
            ],
          },
          "/internal/status": Object {
            "required": Array [
              "get",
            ],
          },
          "/internal/swagger.yaml": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/internal/status",
          "/internal/swagger.yaml",
          "/api/v2/accounts/{accountId}/balance",
          "/api/v2/accounts/{accountId}/transactions",
          "/api/v2/accounts/{accountId}/adjust-balance",
          "/api/v3/accounts/{accountId}/balance",
          "/api/v3/accounts/{accountId}/transactions",
          "/api/v3/accounts/{accountId}/adjust-balance",
        ],
      },
      "security": Object {
        "required": Array [
          "BasicAuth",
          "BearerAuth",
          "ApiKeyAuth",
        ],
      },
    },
    "required": Array [
      "paths",
      "security",
    ],
  },
  "routes": Object {
    "/api/v2/accounts/{accountId}/adjust-balance": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/AdjustBalanceRequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v2/accounts/{accountId}/balance": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v2/accounts/{accountId}/transactions": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "headers": Object {
                  "properties": Object {
                    "scenario": Object {
                      "type": "string",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "cookies": Object {
                  "properties": Object {
                    "session": Object {
                      "type": "string",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "fromDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "fromDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "toDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "toDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "transactionType": Object {
                      "items": Object {
                        "enum": Array [
                          "TopUp",
                          "ElectricityUsageCharge",
                          "ElectricityStandingCharge",
                          "BalanceAdjustment",
                        ],
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "required": Array [
                            "x-api-key",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/TransactionHistoryHttpResponseV2",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "ApiKeyAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/adjust-balance": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/AdjustBalanceRequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/balance": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/transactions": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "fromDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "fromDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "toDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "toDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "transactionType": Object {
                      "items": Object {
                        "enum": Array [
                          "TopUp",
                          "ElectricityUsageCharge",
                          "ElectricityStandingCharge",
                          "BalanceAdjustment",
                        ],
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/TransactionHistoryHttpResponseV3",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/internal/status": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "anyOf": Array [],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [],
      },
    },
    "/internal/swagger.yaml": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "anyOf": Array [],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [],
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test balance-service.json 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/api/v2/accounts/{accountId}/adjust-balance": Object {
            "required": Array [
              "post",
            ],
          },
          "/api/v2/accounts/{accountId}/balance": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v2/accounts/{accountId}/transactions": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v3/accounts/{accountId}/adjust-balance": Object {
            "required": Array [
              "post",
            ],
          },
          "/api/v3/accounts/{accountId}/balance": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v3/accounts/{accountId}/transactions": Object {
            "required": Array [
              "get",
            ],
          },
          "/internal/status": Object {
            "required": Array [
              "get",
            ],
          },
          "/internal/swagger.yaml": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/internal/status",
          "/internal/swagger.yaml",
          "/api/v2/accounts/{accountId}/balance",
          "/api/v2/accounts/{accountId}/transactions",
          "/api/v2/accounts/{accountId}/adjust-balance",
          "/api/v3/accounts/{accountId}/balance",
          "/api/v3/accounts/{accountId}/transactions",
          "/api/v3/accounts/{accountId}/adjust-balance",
        ],
      },
      "security": Object {
        "required": Array [
          "BasicAuth",
          "BearerAuth",
          "ApiKeyAuth",
        ],
      },
    },
    "required": Array [
      "paths",
      "security",
    ],
  },
  "routes": Object {
    "/api/v2/accounts/{accountId}/adjust-balance": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/AdjustBalanceRequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v2/accounts/{accountId}/balance": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v2/accounts/{accountId}/transactions": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "headers": Object {
                  "properties": Object {
                    "scenario": Object {
                      "type": "string",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "cookies": Object {
                  "properties": Object {
                    "session": Object {
                      "type": "string",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "fromDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "fromDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "toDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "toDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "transactionType": Object {
                      "items": Object {
                        "enum": Array [
                          "TopUp",
                          "ElectricityUsageCharge",
                          "ElectricityStandingCharge",
                          "BalanceAdjustment",
                        ],
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "required": Array [
                            "x-api-key",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/TransactionHistoryHttpResponseV2",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "ApiKeyAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/adjust-balance": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/AdjustBalanceRequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/balance": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/transactions": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "fromDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "fromDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "toDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "toDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "transactionType": Object {
                      "items": Object {
                        "enum": Array [
                          "TopUp",
                          "ElectricityUsageCharge",
                          "ElectricityStandingCharge",
                          "BalanceAdjustment",
                        ],
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/TransactionHistoryHttpResponseV3",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/internal/status": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "anyOf": Array [],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [],
      },
    },
    "/internal/swagger.yaml": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "anyOf": Array [],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [],
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test link-example.json 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/2.0/repositories/{username}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge": Object {
            "required": Array [
              "post",
            ],
          },
          "/2.0/users/{username}": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/2.0/users/{username}",
          "/2.0/repositories/{username}",
          "/2.0/repositories/{username}/{slug}",
          "/2.0/repositories/{username}/{slug}/pullrequests",
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}",
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/2.0/repositories/{username}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/repository",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/repository",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "state": Object {
                      "enum": Array [
                        "open",
                        "merged",
                        "declined",
                      ],
                      "type": "string",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/pullrequest",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests/{pid}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "pid": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "pid",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/pullrequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "pid": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "pid",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 204,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/users/{username}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/user",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test link-example.json 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/2.0/repositories/{username}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge": Object {
            "required": Array [
              "post",
            ],
          },
          "/2.0/users/{username}": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/2.0/users/{username}",
          "/2.0/repositories/{username}",
          "/2.0/repositories/{username}/{slug}",
          "/2.0/repositories/{username}/{slug}/pullrequests",
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}",
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/2.0/repositories/{username}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/repository",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/repository",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "state": Object {
                      "enum": Array [
                        "open",
                        "merged",
                        "declined",
                      ],
                      "type": "string",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/pullrequest",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests/{pid}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "pid": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "pid",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/pullrequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "pid": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "pid",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 204,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/users/{username}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/user",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test petstore.json 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/pets": Object {
            "required": Array [
              "get",
              "post",
            ],
          },
          "/pets/{petId}": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/pets",
          "/pets/{petId}",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/pets": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "limit": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pets",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "headers": Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "x-next": Object {
                          "type": "string",
                        },
                      },
                    },
                  ],
                },
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "post": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 201,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/pets/{petId}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "petId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "petId",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pets",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test petstore.json 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/pets": Object {
            "required": Array [
              "get",
              "post",
            ],
          },
          "/pets/{petId}": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/pets",
          "/pets/{petId}",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/pets": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "limit": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pets",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "headers": Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "x-next": Object {
                          "type": "string",
                        },
                      },
                    },
                  ],
                },
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "post": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 201,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/pets/{petId}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "petId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "petId",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pets",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test petstore-exanded.json 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/pets": Object {
            "required": Array [
              "get",
              "post",
            ],
          },
          "/pets/{id}": Object {
            "required": Array [
              "get",
              "delete",
            ],
          },
        },
        "required": Array [
          "/pets",
          "/pets/{id}",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/pets": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "tags": Object {
                      "items": Object {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "limit": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/Pet",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/NewPet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/pets/{id}": Object {
      "delete": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": Array [
                    "id",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 204,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": Array [
                    "id",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test petstore-exanded.json 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/pets": Object {
            "required": Array [
              "get",
              "post",
            ],
          },
          "/pets/{id}": Object {
            "required": Array [
              "get",
              "delete",
            ],
          },
        },
        "required": Array [
          "/pets",
          "/pets/{id}",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/pets": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "tags": Object {
                      "items": Object {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "limit": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/Pet",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/NewPet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/pets/{id}": Object {
      "delete": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": Array [
                    "id",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 204,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": Array [
                    "id",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test uspto.json 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/": Object {
            "required": Array [
              "get",
            ],
          },
          "/{dataset}/{version}/fields": Object {
            "required": Array [
              "get",
            ],
          },
          "/{dataset}/{version}/records": Object {
            "required": Array [
              "post",
            ],
          },
        },
        "required": Array [
          "/",
          "/{dataset}/{version}/fields",
          "/{dataset}/{version}/records",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/dataSetList",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/{dataset}/{version}/fields": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "dataset": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "dataset",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "version": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "version",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "type": "string",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "type": "string",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/{dataset}/{version}/records": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "version": Object {
                      "default": "v1",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "version",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "dataset": Object {
                      "default": "oa_citations",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "dataset",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "properties": Object {
                        "criteria": Object {
                          "default": "*:*",
                          "description": "Uses Lucene Query Syntax in the format of propertyName:value, propertyName:[num1 TO num2] and date range format: propertyName:[yyyyMMdd TO yyyyMMdd]. In the response please see the 'docs' element which has the list of record objects. Each record structure would consist of all the fields and their corresponding values.",
                          "type": "string",
                        },
                        "rows": Object {
                          "default": 100,
                          "description": "Specify number of rows to be returned. If you run the search with default values, in the response you will see 'numFound' attribute which will tell the number of records available in the dataset.",
                          "type": "integer",
                        },
                        "start": Object {
                          "default": 0,
                          "description": "Starting record number. Default value is 0.",
                          "type": "integer",
                        },
                      },
                      "required": Array [
                        "criteria",
                      ],
                      "type": "object",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/x\\\\-www\\\\-form\\\\-urlencoded",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "additionalProperties": Object {
                          "type": "object",
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing json schemas Test uspto.json 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/": Object {
            "required": Array [
              "get",
            ],
          },
          "/{dataset}/{version}/fields": Object {
            "required": Array [
              "get",
            ],
          },
          "/{dataset}/{version}/records": Object {
            "required": Array [
              "post",
            ],
          },
        },
        "required": Array [
          "/",
          "/{dataset}/{version}/fields",
          "/{dataset}/{version}/records",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/dataSetList",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/{dataset}/{version}/fields": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "dataset": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "dataset",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "version": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "version",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "type": "string",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "type": "string",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/{dataset}/{version}/records": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "version": Object {
                      "default": "v1",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "version",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "dataset": Object {
                      "default": "oa_citations",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "dataset",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "properties": Object {
                        "criteria": Object {
                          "default": "*:*",
                          "description": "Uses Lucene Query Syntax in the format of propertyName:value, propertyName:[num1 TO num2] and date range format: propertyName:[yyyyMMdd TO yyyyMMdd]. In the response please see the 'docs' element which has the list of record objects. Each record structure would consist of all the fields and their corresponding values.",
                          "type": "string",
                        },
                        "rows": Object {
                          "default": 100,
                          "description": "Specify number of rows to be returned. If you run the search with default values, in the response you will see 'numFound' attribute which will tell the number of records available in the dataset.",
                          "type": "integer",
                        },
                        "start": Object {
                          "default": 0,
                          "description": "Starting record number. Default value is 0.",
                          "type": "integer",
                        },
                      },
                      "required": Array [
                        "criteria",
                      ],
                      "type": "object",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/x\\\\-www\\\\-form\\\\-urlencoded",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "additionalProperties": Object {
                          "type": "object",
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test api-with-examples.yaml 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/": Object {
            "required": Array [
              "get",
            ],
          },
          "/v2": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/",
          "/v2",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 300,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/v2": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 203,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test api-with-examples.yaml 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/": Object {
            "required": Array [
              "get",
            ],
          },
          "/v2": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/",
          "/v2",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 300,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/v2": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": undefined,
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 203,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test balance-service.yaml 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/api/v2/accounts/{accountId}/adjust-balance": Object {
            "required": Array [
              "post",
            ],
          },
          "/api/v2/accounts/{accountId}/balance": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v2/accounts/{accountId}/transactions": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v3/accounts/{accountId}/adjust-balance": Object {
            "required": Array [
              "post",
            ],
          },
          "/api/v3/accounts/{accountId}/balance": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v3/accounts/{accountId}/transactions": Object {
            "required": Array [
              "get",
            ],
          },
          "/internal/status": Object {
            "required": Array [
              "get",
            ],
          },
          "/internal/swagger.yaml": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/internal/status",
          "/internal/swagger.yaml",
          "/api/v2/accounts/{accountId}/balance",
          "/api/v2/accounts/{accountId}/transactions",
          "/api/v2/accounts/{accountId}/adjust-balance",
          "/api/v3/accounts/{accountId}/balance",
          "/api/v3/accounts/{accountId}/transactions",
          "/api/v3/accounts/{accountId}/adjust-balance",
        ],
      },
      "security": Object {
        "required": Array [
          "BasicAuth",
          "BearerAuth",
          "ApiKeyAuth",
        ],
      },
    },
    "required": Array [
      "paths",
      "security",
    ],
  },
  "routes": Object {
    "/api/v2/accounts/{accountId}/adjust-balance": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/AdjustBalanceRequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v2/accounts/{accountId}/balance": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v2/accounts/{accountId}/transactions": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "headers": Object {
                  "properties": Object {
                    "scenario": Object {
                      "type": "string",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "cookies": Object {
                  "properties": Object {
                    "session": Object {
                      "type": "string",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "fromDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "fromDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "toDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "toDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "transactionType": Object {
                      "items": Object {
                        "enum": Array [
                          "TopUp",
                          "ElectricityUsageCharge",
                          "ElectricityStandingCharge",
                          "BalanceAdjustment",
                        ],
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "required": Array [
                            "x-api-key",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/TransactionHistoryHttpResponseV2",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "ApiKeyAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/adjust-balance": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/AdjustBalanceRequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/balance": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/transactions": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "fromDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "fromDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "toDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "toDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "transactionType": Object {
                      "items": Object {
                        "enum": Array [
                          "TopUp",
                          "ElectricityUsageCharge",
                          "ElectricityStandingCharge",
                          "BalanceAdjustment",
                        ],
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/TransactionHistoryHttpResponseV3",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/internal/status": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "anyOf": Array [],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [],
      },
    },
    "/internal/swagger.yaml": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "anyOf": Array [],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [],
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test balance-service.yaml 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/api/v2/accounts/{accountId}/adjust-balance": Object {
            "required": Array [
              "post",
            ],
          },
          "/api/v2/accounts/{accountId}/balance": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v2/accounts/{accountId}/transactions": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v3/accounts/{accountId}/adjust-balance": Object {
            "required": Array [
              "post",
            ],
          },
          "/api/v3/accounts/{accountId}/balance": Object {
            "required": Array [
              "get",
            ],
          },
          "/api/v3/accounts/{accountId}/transactions": Object {
            "required": Array [
              "get",
            ],
          },
          "/internal/status": Object {
            "required": Array [
              "get",
            ],
          },
          "/internal/swagger.yaml": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/internal/status",
          "/internal/swagger.yaml",
          "/api/v2/accounts/{accountId}/balance",
          "/api/v2/accounts/{accountId}/transactions",
          "/api/v2/accounts/{accountId}/adjust-balance",
          "/api/v3/accounts/{accountId}/balance",
          "/api/v3/accounts/{accountId}/transactions",
          "/api/v3/accounts/{accountId}/adjust-balance",
        ],
      },
      "security": Object {
        "required": Array [
          "BasicAuth",
          "BearerAuth",
          "ApiKeyAuth",
        ],
      },
    },
    "required": Array [
      "paths",
      "security",
    ],
  },
  "routes": Object {
    "/api/v2/accounts/{accountId}/adjust-balance": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/AdjustBalanceRequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v2/accounts/{accountId}/balance": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v2/accounts/{accountId}/transactions": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "headers": Object {
                  "properties": Object {
                    "scenario": Object {
                      "type": "string",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "cookies": Object {
                  "properties": Object {
                    "session": Object {
                      "type": "string",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "fromDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "fromDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "toDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "toDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "transactionType": Object {
                      "items": Object {
                        "enum": Array [
                          "TopUp",
                          "ElectricityUsageCharge",
                          "ElectricityStandingCharge",
                          "BalanceAdjustment",
                        ],
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "required": Array [
                            "x-api-key",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/TransactionHistoryHttpResponseV2",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "ApiKeyAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/adjust-balance": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/AdjustBalanceRequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/balance": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/BalanceSummaryHttpResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/api/v3/accounts/{accountId}/transactions": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "accountId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "accountId",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "fromDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "fromDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "toDate": Object {
                      "format": "date",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "toDate",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "transactionType": Object {
                      "items": Object {
                        "enum": Array [
                          "TopUp",
                          "ElectricityUsageCharge",
                          "ElectricityStandingCharge",
                          "BalanceAdjustment",
                        ],
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "anyOf": Array [
                Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "headers": Object {
                          "properties": Object {
                            "authorization": Object {
                              "format": /\\^bearer/i,
                            },
                          },
                          "required": Array [
                            "authorization",
                          ],
                        },
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/TransactionHistoryHttpResponseV3",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 400,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/HttpErrorResponse",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 500,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [
          Object {
            "BearerAuth": Array [],
          },
        ],
      },
    },
    "/internal/status": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "anyOf": Array [],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [],
      },
    },
    "/internal/swagger.yaml": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "anyOf": Array [],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": Array [],
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test link-example.yaml 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/2.0/repositories/{username}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge": Object {
            "required": Array [
              "post",
            ],
          },
          "/2.0/users/{username}": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/2.0/users/{username}",
          "/2.0/repositories/{username}",
          "/2.0/repositories/{username}/{slug}",
          "/2.0/repositories/{username}/{slug}/pullrequests",
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}",
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/2.0/repositories/{username}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/repository",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/repository",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "state": Object {
                      "enum": Array [
                        "open",
                        "merged",
                        "declined",
                      ],
                      "type": "string",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/pullrequest",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests/{pid}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "pid": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "pid",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/pullrequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "pid": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "pid",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 204,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/users/{username}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/user",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test link-example.yaml 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/2.0/repositories/{username}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}": Object {
            "required": Array [
              "get",
            ],
          },
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge": Object {
            "required": Array [
              "post",
            ],
          },
          "/2.0/users/{username}": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/2.0/users/{username}",
          "/2.0/repositories/{username}",
          "/2.0/repositories/{username}/{slug}",
          "/2.0/repositories/{username}/{slug}/pullrequests",
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}",
          "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/2.0/repositories/{username}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/repository",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/repository",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "state": Object {
                      "enum": Array [
                        "open",
                        "merged",
                        "declined",
                      ],
                      "type": "string",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/pullrequest",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests/{pid}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "pid": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "pid",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/pullrequest",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/repositories/{username}/{slug}/pullrequests/{pid}/merge": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "slug": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "slug",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "pid": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "pid",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 204,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/2.0/users/{username}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "username",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/user",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test petstore.yaml 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/pets": Object {
            "required": Array [
              "get",
              "post",
            ],
          },
          "/pets/{petId}": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/pets",
          "/pets/{petId}",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/pets": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "limit": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pets",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "headers": Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "x-next": Object {
                          "type": "string",
                        },
                      },
                    },
                  ],
                },
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "post": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 201,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/pets/{petId}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "petId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "petId",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pets",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test petstore.yaml 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/pets": Object {
            "required": Array [
              "get",
              "post",
            ],
          },
          "/pets/{petId}": Object {
            "required": Array [
              "get",
            ],
          },
        },
        "required": Array [
          "/pets",
          "/pets/{petId}",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/pets": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "limit": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pets",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "headers": Object {
                  "allOf": Array [
                    Object {
                      "properties": Object {
                        "x-next": Object {
                          "type": "string",
                        },
                      },
                    },
                  ],
                },
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "post": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 201,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/pets/{petId}": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "petId": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "petId",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pets",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test petstore-expanded.yaml 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/pets": Object {
            "required": Array [
              "get",
              "post",
            ],
          },
          "/pets/{id}": Object {
            "required": Array [
              "get",
              "delete",
            ],
          },
        },
        "required": Array [
          "/pets",
          "/pets/{id}",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/pets": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "tags": Object {
                      "items": Object {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "limit": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/Pet",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/NewPet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/pets/{id}": Object {
      "delete": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": Array [
                    "id",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 204,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": Array [
                    "id",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test petstore-expanded.yaml 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/pets": Object {
            "required": Array [
              "get",
              "post",
            ],
          },
          "/pets/{id}": Object {
            "required": Array [
              "get",
              "delete",
            ],
          },
        },
        "required": Array [
          "/pets",
          "/pets/{id}",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/pets": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "tags": Object {
                      "items": Object {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  },
                },
              },
            },
            Object {
              "properties": Object {
                "query": Object {
                  "properties": Object {
                    "limit": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                  },
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "$ref": "#/components/schemas/Pet",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/NewPet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "required": Array [
                "body",
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/pets/{id}": Object {
      "delete": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": Array [
                    "id",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "properties": Object {
                "status": Object {
                  "const": 204,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                  },
                  "required": Array [
                    "id",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Pet",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/Error",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": true,
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test uspto.yaml 1`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/": Object {
            "required": Array [
              "get",
            ],
          },
          "/{dataset}/{version}/fields": Object {
            "required": Array [
              "get",
            ],
          },
          "/{dataset}/{version}/records": Object {
            "required": Array [
              "post",
            ],
          },
        },
        "required": Array [
          "/",
          "/{dataset}/{version}/fields",
          "/{dataset}/{version}/records",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/dataSetList",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/{dataset}/{version}/fields": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "dataset": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "dataset",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "version": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "version",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "type": "string",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "type": "string",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/{dataset}/{version}/records": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "version": Object {
                      "default": "v1",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "version",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "dataset": Object {
                      "default": "oa_citations",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "dataset",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "properties": Object {
                        "criteria": Object {
                          "default": "*:*",
                          "description": "Uses Lucene Query Syntax in the format of propertyName:value, propertyName:[num1 TO num2] and date range format: propertyName:[yyyyMMdd TO yyyyMMdd]. In the response please see the 'docs' element which has the list of record objects. Each record structure would consist of all the fields and their corresponding values.",
                          "type": "string",
                        },
                        "rows": Object {
                          "default": 100,
                          "description": "Specify number of rows to be returned. If you run the search with default values, in the response you will see 'numFound' attribute which will tell the number of records available in the dataset.",
                          "type": "integer",
                        },
                        "start": Object {
                          "default": 0,
                          "description": "Starting record number. Default value is 0.",
                          "type": "integer",
                        },
                      },
                      "required": Array [
                        "criteria",
                      ],
                      "type": "object",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/x\\\\-www\\\\-form\\\\-urlencoded",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "additionalProperties": Object {
                          "type": "object",
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;

exports[`Loading and processing yaml schemas Test uspto.yaml 2`] = `
Object {
  "resolvers": Object {
    "properties": Object {
      "paths": Object {
        "properties": Object {
          "/": Object {
            "required": Array [
              "get",
            ],
          },
          "/{dataset}/{version}/fields": Object {
            "required": Array [
              "get",
            ],
          },
          "/{dataset}/{version}/records": Object {
            "required": Array [
              "post",
            ],
          },
        },
        "required": Array [
          "/",
          "/{dataset}/{version}/fields",
          "/{dataset}/{version}/records",
        ],
      },
    },
    "required": Array [
      "paths",
    ],
  },
  "routes": Object {
    "/": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "$ref": "#/components/schemas/dataSetList",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/{dataset}/{version}/fields": Object {
      "get": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "dataset": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "dataset",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "version": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "version",
                  ],
                },
              },
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "type": "string",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "type": "string",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
    "/{dataset}/{version}/records": Object {
      "post": Object {
        "context": Object {
          "allOf": Array [
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "version": Object {
                      "default": "v1",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "version",
                  ],
                },
              },
            },
            Object {
              "properties": Object {
                "path": Object {
                  "properties": Object {
                    "dataset": Object {
                      "default": "oa_citations",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "dataset",
                  ],
                },
              },
            },
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "properties": Object {
                        "criteria": Object {
                          "default": "*:*",
                          "description": "Uses Lucene Query Syntax in the format of propertyName:value, propertyName:[num1 TO num2] and date range format: propertyName:[yyyyMMdd TO yyyyMMdd]. In the response please see the 'docs' element which has the list of record objects. Each record structure would consist of all the fields and their corresponding values.",
                          "type": "string",
                        },
                        "rows": Object {
                          "default": 100,
                          "description": "Specify number of rows to be returned. If you run the search with default values, in the response you will see 'numFound' attribute which will tell the number of records available in the dataset.",
                          "type": "integer",
                        },
                        "start": Object {
                          "default": 0,
                          "description": "Starting record number. Default value is 0.",
                          "type": "integer",
                        },
                      },
                      "required": Array [
                        "criteria",
                      ],
                      "type": "object",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/x\\\\-www\\\\-form\\\\-urlencoded",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
            },
          ],
        },
        "response": Object {
          "discriminator": Object {
            "propertyName": "status",
          },
          "oneOf": Array [
            Object {
              "discriminator": Object {
                "propertyName": "headers",
              },
              "oneOf": Array [
                Object {
                  "properties": Object {
                    "body": Object {
                      "items": Object {
                        "additionalProperties": Object {
                          "type": "object",
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "headers": Object {
                      "properties": Object {
                        "content-type": Object {
                          "pattern": "application\\\\/json",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "content-type",
                      ],
                      "type": "object",
                    },
                  },
                },
              ],
              "properties": Object {
                "status": Object {
                  "const": 200,
                },
              },
              "type": "object",
            },
            Object {
              "properties": Object {
                "status": Object {
                  "const": 404,
                },
              },
              "type": "object",
            },
          ],
        },
        "security": undefined,
      },
    },
  },
}
`;
